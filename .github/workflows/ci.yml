name: Build and Push dist to OSS
on:
  release:
    types: [created]
# 使用并发取消任何当前作业或运行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: macOS-latest
    strategy:
      fail-fast: false
    steps:
      - name: 从tag中解析出当前构建的分支，仓库等，并暴露到环境变量中
        uses: threfo/tag-parse-action@master
        with:
          githubToken: ${{ secrets.ACCESS_TOKEN }}

      - name: 拉取私有仓库的代码
        uses: actions/checkout@master
        with:
          repository: threfo/${{ env.REPOSITORY }}
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: ${{ env.BRANCH }}
      
      - name: Set up JDK 11
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          java-version: 11
          distribution: temurin
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: |
          flutter --version

      - name: Install dependencies
        run: flutter pub get
  
      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: 项目构建
        run: |
          export BUILD_BRANCH=${{ secrets.BRANCH }} 
          ${{ env.RUN_COMMAND }}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYMMDDHHmm
          utcOffset: '+08:00'

      - name: Use current time
        env:
          F_TIME: '${{ steps.current-time.outputs.formattedTime }}'
        run: echo "NOW=$F_TIME" >> $GITHUB_ENV
      
      - name: Get files
        shell: bash
        run: |
          folder_path=".${{ env.APP_PATH }}/build"
          cos_url_path="/${{ env.REPOSITORY }}${{ env.APP_PATH }}/${{ env.BRANCH }}"
          pre_str="https://assets.belloai.com$cos_url_path/default"

          file_list=$(find "$folder_path" -type f)
          file_array_str=$(awk -v RS="\n" -v ORS=";" '{print $0}' <<< "$file_list")
          joined_string=$(echo $file_array_str | sed "s|$folder_path|$pre_str|g")


          echo "FOLDER_PATH=$folder_path" >> $GITHUB_ENV
          echo "COS_URL_PATH=$cos_url_path" >> $GITHUB_ENV
          echo "OSS_URLS_STR=$joined_string" >> $GITHUB_ENV


      - name: 上传除html以外的静态资源到腾讯云COS另外的桶
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload -rs .${{ env.APP_PATH }}/build/ /${{ env.REPOSITORY }}${{ env.APP_PATH }}/${{ env.BRANCH }}/default/ 
          secret_id: ${{ secrets.OSS_SECRET_ID }}
          secret_key: ${{ secrets.OSS_SECRET_KEY }}
          bucket: ${{ secrets.OSS_ASSETS_BUCKET }}
          region: ${{ secrets.OSS_REGION }}
      
      - name: 上传html到腾讯云COS-备份版本
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload .${{ env.APP_PATH }}/build/ /${{ env.REPOSITORY }}${{ env.APP_PATH }}/${{ env.BRANCH }}/${{ env.NOW }}/
          secret_id: ${{ secrets.OSS_SECRET_ID }}
          secret_key: ${{ secrets.OSS_SECRET_KEY }}
          bucket: ${{ secrets.OSS_BUCKET }}
          region: ${{ secrets.OSS_REGION }}

      - name: 构建成功消息
        if: ${{ success() }}
        uses: threfo/work-wechat-msg@main
        with:
          botKey: ${{ secrets.WORK_WECHAT_GITHUB_ROBOT_KEY }}
          content: 🎉 项目${{ env.REPOSITORY }}，分支${{ env.BRANCH }}, 构建命令${{ env.RUN_COMMAND }}，上传到/${{ env.REPOSITORY }}${{ env.APP_PATH }}/${{ env.SYNC_BRANCH }} 构建成功。--- Github Actions
        
      - name: 构建失败消息
        if: ${{ failure() }}
        uses: threfo/work-wechat-msg@main
        with:
          botKey: ${{ secrets.WORK_WECHAT_GITHUB_ROBOT_KEY }}
          content: ❌ 项目${{ env.REPOSITORY }}，分支${{ env.BRANCH }}, 构建命令${{ env.RUN_COMMAND }} 构建失败。--- Github Actions
        
  




